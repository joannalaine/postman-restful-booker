{
	"info": {
		"_postman_id": "a65ff539-584e-4ebb-a9ac-58e17cab8820",
		"name": "ResponseContent",
		"description": "Check each response content-type and type/format for each response body item.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "CreateToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d38fcb85-da30-42b8-a70f-2e8ce7d0cb3e",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.expect(jsonData.token).to.not.be.empty;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/auth",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "GetBookingIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24bb257b-29f8-4f28-aa4e-18a2797ffd79",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain at least one bookingid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].bookingid).to.not.be.null;",
									"    pm.expect(jsonData[0].bookingid).to.be.a('number');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9fdd21f2-8c2f-4a7a-bb29-06093f5d0df1",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: \"POST\",",
									"    header: \"Content-Type:application/json\",",
									"    body: {",
									"        mode: \"raw\",",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \"|\" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3294fa0-35c3-4743-b03f-c6b21cfd4241",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "30ab7cf8-0a77-46d4-9167-43301c592c08",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: \"POST\",",
									"    header: \"Content-Type:application/json\",",
									"    body: {",
									"        mode: \"raw\",",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \"|\" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d7c69fd-ba17-420d-bd2a-41333e966d91",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain bookingid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingid).to.not.be.null;",
									"    pm.expect(jsonData.bookingid).to.be.a('number');",
									"    pm.expect(jsonData.bookingid).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.firstname).to.not.be.null;",
									"    pm.expect(jsonData.booking.firstname).to.be.a('string');",
									"    pm.expect(jsonData.booking.firstname).to.equal(pm.variables.get(\"firstname\"));",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.lastname).to.not.be.null;",
									"    pm.expect(jsonData.booking.lastname).to.be.a('string');",
									"    pm.expect(jsonData.booking.lastname).to.equal(pm.variables.get(\"lastname\"));",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.booking.totalprice).to.be.a('number');",
									"    pm.expect(jsonData.booking.totalprice).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.booking.depositpaid).to.be.a('boolean');",
									"    pm.expect(jsonData.booking.depositpaid).to.be.true;",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.be.a('string');",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.equal(pm.variables.get(\"checkin\"));",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.be.a('string');",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.equal(pm.variables.get(\"checkout\"));",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.booking.additionalneeds).to.be.a('string');",
									"    pm.expect(jsonData.booking.additionalneeds).to.equal(pm.variables.get(\"additionalneeds\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": \"{{totalprice}}\",\n    \"depositpaid\": \"{{depositpaid}}\",\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBooking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ef55e3c2-8c8e-495e-b008-00be5ee78ade",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6563e02d-59a4-430c-8cd3-c461b9294be1",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": \"{{totalprice}}\",\n    \"depositpaid\": \"{{depositpaid}}\",\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PartialUpdateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c266b857-6566-46d0-9d16-878a21818bb0",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "249e04a3-5d9f-43d6-9823-25d931c11f14",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteBooking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "780c1436-6089-4c5a-9774-d568ffe91258",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fc86b231-9b82-4672-8ae6-430df82f3831",
								"exec": [
									"pm.test(\"Status code should be 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookingUsingParams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3294fa0-35c3-4743-b03f-c6b21cfd4241",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "30ab7cf8-0a77-46d4-9167-43301c592c08",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking/:bookingid",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":bookingid"
							],
							"variable": [
								{
									"key": "bookingid",
									"value": "{{bookingid}}"
								}
							]
						},
						"description": "Example of using a path parameter pointing to an environment variable."
					},
					"response": []
				},
				{
					"name": "MOCK Get Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ed2a7e5-da42-4546-ae4a-2d61ac377f19",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Content-Type should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain firstname\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstname).to.not.be.null;\r",
									"    pm.expect(jsonData.firstname).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain lastname\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastname).to.not.be.null;\r",
									"    pm.expect(jsonData.lastname).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain totalprice\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.totalprice).to.not.be.null;\r",
									"    pm.expect(jsonData.totalprice).to.be.a('number');\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain depositpaid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;\r",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;\r",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;\r",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain additionalneeds\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;\r",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://543248c7-6437-4996-80b3-3247ae79be34.mock.pstmn.io/get",
							"protocol": "https",
							"host": [
								"543248c7-6437-4996-80b3-3247ae79be34",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"get"
							]
						},
						"description": "Postman Mock Server"
					},
					"response": [
						{
							"name": "postman-echo.com/get",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "postman-echo.com/get",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"get"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 27 Sep 2020 17:58:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "369"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "ETag",
									"value": "W/\"171-Bodq3zgmn44xULOUgDom+F/DK0E\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AcpP9XVOQuoLAirKkyf-m0fEzQtOc2vmo.L4u56R25XuEmB3wNmkXvPSU9eNNtwuEpGFNNjaZwyUA; Path=/; HttpOnly"
								}
							],
							"cookie": [],
							"body": "{\n    \"firstname\": \"{{$randomFirstName}}\",\n    \"lastname\": \"{{$randomLastName}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": {{checkin}},\n        \"checkout\": {{checkout}}\n    },\n    \"additionalneeds\": {{additionalneeds}}\n}\n"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2e12e2fa-5227-4688-bd56-0059126923db",
						"type": "text/javascript",
						"exec": [
							"var baseURL = pm.environment.get(\"baseURL\");",
							"var requestURL = baseURL + \"/auth\";",
							"",
							"const echoPostRequest = {",
							"    url: requestURL,",
							"    method: 'POST',",
							"    header: 'Content-Type:application/json',",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            \"username\": \"admin\",",
							"            \"password\": \"password123\"",
							"        })",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, res) {",
							"    pm.environment.set(\"token\", res.json().token);",
							"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
							"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b22be156-b77f-444d-a4a3-aa0d47087441",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4afdec5c-219c-4c44-88d2-6720b637e8d1",
								"exec": [
									"pm.test(\"Status code should be 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ping",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "18ddfd74-c6ef-441e-b4e7-8c7757aa4997",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "248299d7-f234-4b1b-a4fe-b20a527dcb36",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}