{
	"info": {
		"_postman_id": "c35efeb4-1ad5-4109-b66d-ca4bedd72ece",
		"name": "Response Content",
		"description": "Check each response content-type and type/format for each response body item.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "CreateToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e085edc1-13ce-4282-85fd-2786bd19ad57",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.expect(jsonData.token).to.not.be.empty;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/auth",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "GetBookingIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59e04971-dc2c-4856-be04-3ab710d444d4",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain at least one bookingid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].bookingid).to.not.be.null;",
									"    pm.expect(jsonData[0].bookingid).to.be.a('number');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01e77673-a3ae-47e2-a626-78ca11c5dbaa",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: \"POST\",",
									"    header: \"Content-Type:application/json\",",
									"    body: {",
									"        mode: \"raw\",",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \"|\" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "790f99b7-2fbf-4bc2-a3e4-d058c923d78f",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7feb279d-1ca5-4d78-a1b9-68997b73a379",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8a32928-8a00-491d-81c7-3842117f7fc0",
								"exec": [
									"pm.test(\"Status code should be 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain bookingid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingid).to.not.be.null;",
									"    pm.expect(jsonData.bookingid).to.be.a('number');",
									"    pm.expect(jsonData.bookingid).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.firstname).to.not.be.null;",
									"    pm.expect(jsonData.booking.firstname).to.be.a('string');",
									"    pm.expect(jsonData.booking.firstname).to.equal(pm.variables.get(\"firstname\"));",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.lastname).to.not.be.null;",
									"    pm.expect(jsonData.booking.lastname).to.be.a('string');",
									"    pm.expect(jsonData.booking.lastname).to.equal(pm.variables.get(\"lastname\"));",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.booking.totalprice).to.be.a('number');",
									"    pm.expect(jsonData.booking.totalprice).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.booking.depositpaid).to.be.a('boolean');",
									"    pm.expect(jsonData.booking.depositpaid).to.be.true;",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.be.a('string');",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.equal(pm.variables.get(\"checkin\"));",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.be.a('string');",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.equal(pm.variables.get(\"checkout\"));",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.booking.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.booking.additionalneeds).to.be.a('string');",
									"    pm.expect(jsonData.booking.additionalneeds).to.equal(pm.variables.get(\"additionalneeds\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": \"{{totalprice}}\",\n    \"depositpaid\": \"{{depositpaid}}\",\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBooking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0f4d5acf-afd2-4820-95d9-8c46193fb805",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "100a50d2-6e30-4905-97d0-60cde4cc020a",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": \"{{totalprice}}\",\n    \"depositpaid\": \"{{depositpaid}}\",\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PartialUpdateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f741965a-0927-45a3-a83b-2a8791743548",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response should contain firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.not.be.null;",
									"    pm.expect(jsonData.firstname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain lastname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.not.be.null;",
									"    pm.expect(jsonData.lastname).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain totalprice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.not.be.null;",
									"    pm.expect(jsonData.totalprice).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Response should contain depositpaid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.depositpaid).to.not.be.null;",
									"    pm.expect(jsonData.depositpaid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkin).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain bookingdates.checkout\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookingdates.checkout).to.not.be.null;",
									"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Response should contain additionalneeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.not.be.null;",
									"    pm.expect(jsonData.additionalneeds).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b6c7940-7c8e-481b-b7a4-40bfbd066106",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteBooking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c2afc47c-930e-4770-adca-5d4ead89d932",
								"exec": [
									"// Test precondition: At least one booking exists, so create one",
									"var baseURL = pm.environment.get(\"baseURL\");",
									"var requestURL = baseURL + \"/booking\";",
									"",
									"const echoPostRequest = {",
									"    url: requestURL,",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstname\": pm.iterationData.get(\"firstname\"),",
									"            \"lastname\": pm.iterationData.get(\"lastname\"),",
									"            \"totalprice\": pm.iterationData.get(\"totalprice\"),",
									"            \"depositpaid\": pm.iterationData.get(\"depositpaid\"),",
									"            \"bookingdates\": {",
									"                \"checkin\": pm.iterationData.get(\"checkin\"),",
									"                \"checkout\": pm.iterationData.get(\"checkout\")",
									"            },",
									"            \"additionalneeds\": pm.iterationData.get(\"additionalneeds\")",
									"        })",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    pm.environment.set(\"bookingid\", res.json().bookingid);",
									"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
									"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "35d6844f-ee5d-4520-a6a1-3d178404bcad",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8946a672-df90-4db4-841b-fc53b245bb31",
						"type": "text/javascript",
						"exec": [
							"var baseURL = pm.environment.get(\"baseURL\");",
							"var requestURL = baseURL + \"/auth\";",
							"",
							"const echoPostRequest = {",
							"    url: requestURL,",
							"    method: 'POST',",
							"    header: 'Content-Type:application/json',",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            \"username\": \"admin\",",
							"            \"password\": \"password123\"",
							"        })",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, res) {",
							"    pm.environment.set(\"token\", res.json().token);",
							"    var logTitle = pm.info.requestName + \" | \" + pm.info.eventName + \":\\n\";",
							"    console.log(err ? err : logTitle + JSON.stringify(res.json(), null, 2));",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "940c72d0-212c-48a5-b1a2-14f981f33603",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5589752e-c1a2-4920-8543-8964eae1d551",
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ping",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d2beb0f2-6061-4ceb-8742-cdebbf3f45d0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2979bfb9-a7b3-42be-82ab-8f1bf4fe0657",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}